{"version":3,"sources":["components/ClosedItems.js","components/ItemDetail.js","components/AddItem.js","components/ListItems.js","components/Search.js","components/Sort.js","components/Title.js","App.js","serviceWorker.js","index.js"],"names":["ClosedItems","className","class","type","name","id","required","value","Component","ItemDetail","props","state","task","status","edit","search","callEdit","bind","onChange","onSave","onDelete","onUpdate","this","setState","level","event","target","index","onClick","AddItem","uuidv4","onClear","selected","ListItems","isEdit","data","elementsTasks","tasks","map","key","style","Search","console","log","Sort","sort","onSort","Title","App","GenerateData","localStorage","setItem","JSON","stringify","onSearch","dataSearch","SearchTask","getItem","parse","tasksRender","item","includes","push","findIndex","splice","updateTasks","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bf317629.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass ClosedItems extends Component {\n    render() {\n        return (\n        <div className=\"AddItem\">\n            \n            <div class=\"panel panel-info\">\n                  <div class=\"panel-heading\">\n                        <h3 class=\"panel-title\">Close item</h3>\n                  </div>\n                  <div class=\"panel-body\">\n                        \n                        <input type=\"text\" name=\"name\" id=\"input\" class=\"form-control\" />\n                        \n                        <select name=\"SelectType\" id=\"inputSelectType\" class=\"form-control\" required=\"required\">\n                            <option value=\"\">High</option>\n                            <option value=\"\">Medium</option>\n                            <option value=\"\">Low</option>\n                        </select>\n                        \n                        \n                        <button type=\"button\" class=\"btn btn-primary ButtonSubmit\">Submit</button>\n                        \n                        <button type=\"button\" class=\"btn btn-primary ButtonCancel\">Cancel</button>\n                        \n                        \n                  </div>\n            </div>\n            \n        </div>)\n    }\n}\nexport default ClosedItems","import React, { Component } from 'react'\n\nclass ItemDetail extends Component {\n    constructor(props) {\n        super (props);\n        this.state = {\n            id :  this.props.task.id,\n            status : 'open',\n            edit : true,\n            search : ''\n        }\n        this.callEdit = this.callEdit.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n        this.onDelete = this.onDelete.bind(this)\n        this.onUpdate = this.onUpdate.bind(this)\n    }\n    callEdit() {\n        if(this.state.edit){\n            this.setState({\n                level : 'high',\n                edit : false\n            })\n        }\n        else{\n            this.setState({\n                edit: true\n            })\n        }\n    }\n    onChange(event){\n        var target = event.target\n        var name = target.name\n        var value = target.value\n        this.setState({\n            [name] : value\n        })\n    }\n    onSave(event){\n        this.props.onSave(this.state)\n    }\n\n    onDelete() {\n        this.props.onDelete(this.props.task.id, this.props.search)\n    }\n    onUpdate(){\n        this.props.onUpdate(this.state)\n        this.callEdit()\n    }\n    render() {\n        var { task, index } = this.props\n        // Show items\n        if(this.state.edit){\n        return (\n            <tr className=\"ItemDetail\">\n\n                <td>{index}</td>\n                <td>{task.name}</td>\n                <td>\n                    <span class={task.level === 'high' ? 'label label-danger' : task.level === 'low' ? 'lalbel label-success' : 'label label-warning'}>{task.level === 'high' ? 'High' : task.level === 'low' ? 'Low' : 'Medium'}</span>\n                </td>\n                <td>\n                    <button type=\"button\" class=\"btn btn-warning\" onClick={this.callEdit}>Edit</button>\n                    <button type=\"button\" class=\"btn btn-danger\" onClick={this.onDelete}>Delete</button>\n                </td>\n\n            </tr >)\n        }\n        // Show edit items\n        return (\n            <tr className=\"EditItem\">\n                <td></td>\n                <td><input type=\"text\" name=\"name\" id=\"input\" class=\"form-control\"  onChange={this.onChange} /></td>\n                <td>\n                    <select name=\"level\" id=\"inputSelectType\" class=\"form-control\" required=\"required\" onChange={this.onChange}>\n                        <option value=\"high\">High</option>\n                        <option value=\"medium\">Medium</option>\n                        <option value=\"low\">Low</option>\n                    </select>\n                </td>\n                <td>\n                    <button type=\"button\" class=\"btn btn-default\" onClick={this.callEdit}>Cancel</button>\n                    <button type=\"button\" class=\"btn btn-success\" onClick={this.onUpdate}>Save</button>\n                </td>\n            </tr>\n        )\n    }\n}\nexport default ItemDetail","import React, { Component } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nclass AddItem extends Component {\n    constructor(props) {\n        super (props)\n        this.state = {\n            id : uuidv4(),\n            name : '',\n            level : 'high',\n            status : 'open',\n        }\n        this.onSave = this.onSave.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.onClear = this.onClear.bind(this)\n    }\n    onChange(event){\n        var target = event.target\n        var name = target.name\n        var value = target.value\n        this.setState({\n            [name] : value\n        })\n    }\n    onClear() {\n        this.setState({\n            name : '',\n            level : 'high',\n            status : 'open'\n        })\n    }\n    onSave(event){\n        this.props.onSave(this.state)\n        this.onClear()\n    }\n    render() {\n        return (\n                \n                <tr className=\"AddItem\">\n                    \n                    <td></td>\n                    <td><input type=\"text\" name=\"name\" id=\"input\" class=\"form-control\" onChange={this.onChange} value={this.state.name}/></td>\n                    <td>\n                        <select name=\"level\" id=\"inputSelectType\" class=\"form-control\" required=\"required\" onChange={this.onChange} value={this.state.level}>\n                            <option value=\"high\">High</option>\n                            <option value=\"medium\" selected='selected'>Medium</option>\n                            <option value=\"low\">Low</option>\n                        </select>\n                    </td>\n                    <td>\n                        <button type=\"button\" class=\"btn btn-default\" onClick={this.onClear}>Cancel</button>\n                        <button type=\"button\" class=\"btn btn-success\" onClick={this.onSave}>Save</button>\n                    </td>\n                </tr>\n        )\n    }\n}\nexport default AddItem\n","import React, { Component } from 'react'\nimport ItemDetail from './ItemDetail'\nimport Additem from './AddItem'\n\nclass ListItems extends Component {\n    constructor(props) {\n        super (props)\n        this.state = {\n            search : '',\n            isEdit: false,\n        }\n        this.onSave = this.onSave.bind(this)\n        this.onDelete = this.onDelete.bind(this)\n        this.onUpdate = this.onUpdate.bind(this)\n    }\n    onSave(data){\n        this.props.onSave(data)\n    }\n    onDelete(data){\n        this.props.onDelete(data)\n        \n    }\n    onUpdate(data){\n        this.props.onUpdate(data)\n    }\n    render() {\n        // Get values from taks\n        var tasks = this.props.tasks\n        // Loop\n        var elementsTasks = tasks.map((task, index) => {\n            if (task.status === 'open'){\n            return <ItemDetail key={index} index={index} task={task} onDelete={this.onDelete} onUpdate={this.onUpdate}></ItemDetail>\n            }\n            return null\n\n        }\n        )\n        return (\n            <div className=\"ListItem\">\n\n                <div class=\"panel panel-info\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"panel-title\">Panel title</h3>\n                    </div>\n                    <div class=\"panel-body\">\n\n                        <table class=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th style={{ \"width\": \"5%\" }}>#</th>\n                                    <th style={{ \"width\": \"61%\", 'textAlign': 'center' }}>Name</th>\n                                    <th style={{ 'textAlign': 'center' }}>Level</th>\n                                    <th style={{ 'textAlign': 'center' }}>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                    {elementsTasks}\n                                    <Additem onSave = {this.onSave}></Additem>\n                            </tbody>\n                        </table>\n\n                    </div>\n                </div>\n\n            </div>)\n    }\n}\nexport default ListItems","import React, { Component } from 'react'\n\nclass Search extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            search: ''\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onClear = this.onClear.bind(this)\n    }\n    onChange(event) {\n        this.setState({ search: event.target.value }, () => {\n            this.props.onChange(this.state.search)\n        });\n\n    }\n    onClear() {\n        console.log(this.props.search)\n        this.setState({\n            search: '',\n        })\n    }\n    render() {\n        return (\n            <div className=\"Search\">\n                <div class='SearchItems'>\n                    <input type=\"search\" name=\"search\" id=\"input\" class=\"form-control\" onChange={this.onChange} value={this.state.search} />\n                    <button class=\"btn\" onClick={this.onClear}><i class=\"fa fa-trash\" ></i> Clear</button>\n                </div>\n            </div>)\n    }\n}\nexport default Search","import React, { Component } from 'react'\n\nclass Sort extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            sort: ''\n        }\n        this.onSort = this.onSort.bind(this)\n    }\n    onSort(event) {\n        this.setState({ sort: event.target.value }, () => this.props.onSort(this.state.sort))\n    }\n    render() {\n        return (\n            <div className=\"Sort\">\n\n                <select name=\"sort\" id=\"input\" class=\"form-control\" required=\"required\" onChange={this.onSort}>\n                    <option value=\"desc\">Desc</option>\n                    <option value=\"asc\"> Asc</option>\n                </select>\n\n            </div>)\n    }\n}\nexport default Sort","import React, { Component } from 'react'\n\nclass Title extends Component {\n    render() {\n        return (\n        <div className=\"Title\">\n            <h2>To do list</h2>\n        </div>)\n    }\n}\nexport default Title","import React, { Component } from 'react';\nimport './App.css';\nimport ClosedItems from './components/ClosedItems'\nimport ListItems from './components/ListItems'\nimport Search from './components/Search'\nimport Sort from './components/Sort'\nimport Title from './components/Title'\nimport { v4 as uuidv4 } from 'uuid'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [\n      ],\n      tasksRender:[\n\n      ],\n      search : '',\n    }\n    this.onSave = this.onSave.bind(this)\n    this.onDelete = this.onDelete.bind(this)\n    this.onUpdate = this.onUpdate.bind(this)\n    // this.onSearch = this.onSearch.bind(this)\n    this.onSort = this.onSort.bind(this)\n  }\n  // Get items from Local Storage\n  componentWillMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      let tasks = JSON.parse(localStorage.getItem('tasks'))\n      this.setState(\n        { tasks: tasks,tasksRender:tasks }\n      )\n    }\n  }\n  // Gen data\n  GenerateData = () => {\n    var tasks = [\n      {\n        id: uuidv4(),\n        name: 'A',\n        level: \"high\",\n        status: 'open'\n      },\n      {\n        id: uuidv4(),\n        name: 'B',\n        level: 'low',\n        status: 'open'\n      },\n      {\n        id: uuidv4(),\n        name: 'C',\n        level: 'medium',\n        status: 'closed'\n      }\n    ]\n    this.setState({\n      tasks: tasks\n    })\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n  }\n\n  // save\n  onSave(data) {\n    var tasks = this.state.tasks;\n    tasks.push(data)\n    this.setState({\n      tasks: tasks\n    })\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n  }\n\n  // delete items\n  onDelete(id) {\n    let tasks = this.state.tasks\n    let index = tasks.findIndex(task => task.id === id) // lambda function\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks,\n        tasksRender : tasks\n      });\n    }\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n  }\n\n  // update\n  onUpdate(data) {\n    let updateTasks = this.state.tasks;\n    let index = updateTasks.findIndex(task => task.id === data.id)\n    if (index !== -1) {\n      updateTasks[index] = data\n      console.log(this.state.tasks[index])\n      this.setState(\n        { tasks: updateTasks }\n      )\n    }\n  }\n\n  // search\n  onSearch = (dataSearch) => {\n    const {tasks} = this.state; // khái bao hang so trong state, hang so nay k doi, chi lay ra du lieu thoi, can thi setState chu k tasks = ...\n\n    let SearchTask = []; // tao bien bang let\n    if (dataSearch === '') {\n      if (localStorage && localStorage.getItem('tasks')) {\n        let taskLocal = JSON.parse(localStorage.getItem('tasks'))\n        this.setState(\n          { tasksRender: tasks }\n        )\n      }\n    }\n    // uncomment kieeur gi??? ctrl /\n    // okela\n    else {\n      for (let item of tasks) {\n        if (item.name.includes(dataSearch)) {\n          SearchTask.push(item)\n        }\n      }\n      this.setState({\n        tasksRender: SearchTask\n      })\n    }\n    \n  }\n  onSort(value) {\n    let tasks = this.state.tasks\n    if(value === 'desc'){\n      \n    }\n    else{\n\n    }\n  }\n  render() {\n    const {tasksRender} = this.state;\n    return (\n      <div className=\"App\">\n\n        <div class=\"container\">\n\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 title\">\n              <Title></Title>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-xs-5 col-sm-5 col-md-5 col-lg-5 search\">\n              <Search onChange={this.onSearch} search={this.onSearch}></Search>\n              <Sort onSort={this.onSort}></Sort>\n\n\n\n            </div>\n\n            <div class=\"col-xs-5 col-sm-5 col-md-5 col-lg-5 col-md-offset-2 ClosedItems\">\n              <ClosedItems></ClosedItems>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <ListItems tasks={tasksRender} onSave={this.onSave} onDelete={this.onDelete} onUpdate={this.onUpdate}></ListItems>\n                <button type=\"button\" class=\"btn btn-primary\" onClick={this.GenerateData}>Generate Data</button>\n              </div>\n            </div>\n\n          </div>\n\n\n        </div>\n\n\n      </div>)\n  }\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}